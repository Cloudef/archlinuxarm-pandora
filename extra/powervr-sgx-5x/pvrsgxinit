#!/bin/bash
# SGX systemd wrapper startup script

initsgx()
{
   if ! /sbin/modprobe -q pvrsrvkm; then
      echo "Module pvrsrvkm failed to load. Retrying."
      if [ -z $depmod_has_been_run ]; then
         if [ -e /sbin/depmod ]; then
            echo "Running /sbin/depmod"
            /sbin/depmod && depmod_has_been_run=1
         fi
      fi
      if ! /sbin/modprobe -q pvrsrvkm; then return; fi
   fi

   # Delete the device for PVR services device and recreate with the
   # correct major number.
   #
   pvr_maj=`grep "pvrsrvkm$" /proc/devices | cut -b1,2,3`
   /bin/rm -f /dev/pvrsrvkm
   /bin/mknod /dev/pvrsrvkm c $pvr_maj 0
   /bin/chmod 666 /dev/pvrsrvkm

   # Run the PVR initialisation server
   if ! /usr/bin/pvrsrvctl --start --no-module; then return; fi

   # Load remaining modules.
   #
   if ! /sbin/modprobe -q omaplfb $PVR_DISPLAY_PARAMS; then
      echo "Module omaplfb failed to load. Retrying."
      if [ -z $depmod_has_been_run ]; then
         if [ -e /sbin/depmod ]; then
            echo "Running /sbin/depmod"
            /sbin/depmod && depmod_has_been_run=1
         fi
      fi
      if ! /sbin/modprobe -q omaplfb $PVR_DISPLAY_PARAMS; then echo "Continuing to load PowerVR services"; omaplfb_failed=1; fi
   fi

   if ! /sbin/modprobe -q bufferclass_ti; then
      echo "Module bufferclass_ti failed to load. Retrying."
      if [ -z $depmod_has_been_run ]; then
         if [ -e /sbin/depmod ]; then
            echo "Running /sbin/depmod"
            /sbin/depmod && depmod_has_been_run=1
         fi
      fi
      if ! /sbin/modprobe -q bufferclass_ti; then echo "Continuing to load PowerVR services"; bufferclass_ti_failed=1; fi
   fi

   # store ES revision
   touch /etc/powervr-esrev
   /usr/sbin/devmem2 0x48004B48 w 0x2 > /dev/null
   /usr/sbin/devmem2 0x48004B10 w 0x1 > /dev/null
   /usr/sbin/devmem2 0x48004B00 w 0x2 > /dev/null

   ES_REVISION="$(/usr/sbin/devmem2 0x50000014 | sed -e s:0x10205:5: -e s:0x10201:3: -e s:0x10003:2: \
                                               | tail -n1 | awk -F': ' '{print $2}')"
   echo "${ES_REVISION}" > /etc/powervr-esrev

   # enable hardware supervised domain power state transition - makes suspend work
   /usr/sbin/devmem2 0x48004B48 w 0x3 > /dev/null

   echo "Loaded PowerVR consumer services."
   return 0;
}

stopsgx()
{
   # Unload modules.  This won't pick up cases where a further module
   # has been added which has a dependency on one of these modules.
   #
   if rmmod omaplfb; then :; else echo "Warning: Could not unload omaplfb"; fi
   if rmmod bufferclass_ti; then :; else echo "Warning: Could not unload bufferclass_ti"; fi

   # Unload the PVR Services module.
   #
   if rmmod pvrsrvkm; then :; else return 1; fi

   /usr/bin/pvrsrvctl --stop --no-module
   echo "Unloaded PowerVR consumer services."
}

# handle
case "$@" in
   start)
      initsgx
      ;;
   stop)
      stopsgx
      ;;
   reload|restart)
      stopsgx
      initsgx
      ;;
   *)
      echo "$0; unknown argument $@." >&2;
      ;;
esac

# vim: set ts=8 sw=3 tw=0 :
